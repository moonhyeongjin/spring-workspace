<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!--  
		spring mvc의 주요 @어노테이션을 감지하고
		적절한 작업을 수행하는 클래스들이 스프링의 빈으로 등록된다.
		컨트롤러 클래스에 정의된 @RequestMapping @RequestParam @RequestBody @ResponseBody
		@Valid @ModelAttrinute @SessionAttributes @SessionStatus 등의 @어노테이션 정보를 분석해서 적절한
		작업을 수행하는 클래스들(스프링에 미리 정의 된) 이 스프링의 빈으로 등록된다.
	-->
	<mvc:annotation-driven />
	
	<!--  
		뷰 리졸브를 스프링의 빈으로 등록한다.
	-->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" ></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!--  
		파일 업로드 처리를 위한 멀티파트 리졸브를 등록한다
	-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>
	
	<!--  
		사용자정의 인터셉터를 등록한다	
	-->
	<bean id="loginCheckInterceptor" class="com.sample.portal.interceptor.LoginCheckInterceptor"></bean>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/home.do"/>
			<mvc:exclude-mapping path="/user/login.do"/>
			<mvc:exclude-mapping path="/user/register.do"/>
			<!-- <mvc:exclude-mapping path="/free/**"/> -->
			<ref bean="loginCheckInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!--  
		컨트롤러들을 스캔해서 스프링의 빈으로 등록한다
	-->
	<context:component-scan base-package="com.sample.portal.controller"></context:component-scan>
	
	
	<!--  
		config.properties 파일 로드하기
	-->
	
	<context:property-placeholder location="classpath:/META-INF/spring/config.properties"/>
</beans>
