<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--  
	Connection pool 객체를 스프링의 빈으로 등록하기
-->

<bean id="cp" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
	<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
	<property name="username" value="hr"></property>
	<property name="password" value="zxcv1234"></property>
</bean>
<!--  
	
	jdbc 엑세스 작업을 단순화시켜놓은 클래스다
	insert/update/delete : update(sql, param) 메소드 사용
	select : queryForObject(sql, rowmapper, param)메소드사용
			 query(sql, rowmapprer, param)메소드사용
	*db access 작업에 필요한 Connection 객체를 획득하기 위해서 Connection pool 객체에 의존한다
	
-->

<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	<property name="dataSource" ref="cp"></property>
</bean>
<!--  
	Dao클래스 
		각각의 테으블에 대한 SQL실행을 담당하는 클래스
		SQL실행작업을 단순화 시켜놓은 템플리 클래스에 의존한다
		
-->


<bean id="jobDao" class="kr.co.jhta.JobDao">
	<property name="jdbcTemplate" ref="jdbcTemplate"></property>
</bean>
<bean id="employeeDao" class="kr.co.jhta.EmployeeDao">
	<property name="template" ref="jdbcTemplate"></property>
</bean>
</beans>
